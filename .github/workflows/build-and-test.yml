name: Build-and-Test

on:
  push:
    # branches: [test-actions]
    paths-ignore: ["**.md", "doc/**"]
  pull_request:
    # branches: [test-actions]
    paths-ignore: ["**.md", "doc/**"]

  # Manual trigger
  # workflow_dispatch:

defaults:
  run:
    working-directory: ./

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # jobs = os * pyversion * env
        os: [ubuntu-18.04, ubuntu-20.04] # [ubuntu-16.04, ubuntu-18.04, ubuntu-20.04]
        python-version: [3.6, 3.7]
        env:
          # - rosetta_compile_options: "--enable-protocol-mpc-securenn"
          # - rosetta_compile_options: "--enable-protocol-mpc-securenn --enable-128bit"
          # - rosetta_compile_options: "--enable-protocol-mpc-helix"
          # - rosetta_compile_options: "--enable-protocol-mpc-helix --enable-128bit"
          - rosetta_compile_options: "--enable-protocol-mpc-securenn --enable-protocol-mpc-helix"
          - rosetta_compile_options: "--enable-protocol-mpc-securenn --enable-protocol-mpc-helix --enable-128bit"
    steps:
      - name: Git clone repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install basic dependencies
        run: |
          sudo apt-get update
          sudo apt-get -y install g++ cmake make automake
      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tensorflow==1.14.0 sklearn matplotlib numpy==1.16.0
      - name: List versions
        run: uname -a && gcc --version && cmake --version && python --version && python3 --version && pip --version && pip list

      - name: Before compile
        run: ./rosetta.sh clean
      - name: Compile
        env:
          ROSETTA_COMPILE_OPTIONS: ${{ matrix.env.rosetta_compile_options }}
        run: ./rosetta.sh compile $ROSETTA_COMPILE_OPTIONS --enable-tests

      - name: Install
        run: ./rosetta.sh install

      - name: Run tests & examples
        run: ./rosetta.sh test all

      - name: Run tutorials
        run: cd ./example/tutorials/code && bash ./tutorials.sh all
